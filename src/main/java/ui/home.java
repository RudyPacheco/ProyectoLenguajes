/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controlUI.validarToken;
import funciones.NumeroLinea;
import funciones.buscarPalabra;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextPane;
import javax.swing.SwingConstants;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author AndaryuS
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    validarToken validar = new validarToken();
    JFileChooser seleccionar = new JFileChooser();
    buscarPalabra buscarPalabra ;
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;
    NumeroLinea numeroLinea;

    public home() {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        numeroLinea=new NumeroLinea(jTextPane1);
        jScrollPane2.setRowHeaderView(numeroLinea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSuperior = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanelDerecho = new javax.swing.JPanel();
        jButtonValidar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonLimpiar = new javax.swing.JButton();
        jPanelIzquierdo = new javax.swing.JPanel();
        jPanelInferior = new javax.swing.JPanel();
        jButtonCargarArchivox = new javax.swing.JButton();
        jButtonGuardarArchivo = new javax.swing.JButton();
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jPanelCentral = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelSuperior.setBackground(new java.awt.Color(0, 153, 255));

        jLabelTitulo.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTitulo.setFont(new java.awt.Font("MesloLGS NF", 1, 36)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitulo.setText("Maquina de estados");
        jLabelTitulo.setToolTipText("");
        jLabelTitulo.setHorizontalAlignment(SwingConstants.CENTER);
        jLabelTitulo.setVerticalAlignment(SwingConstants.CENTER);

        javax.swing.GroupLayout jPanelSuperiorLayout = new javax.swing.GroupLayout(jPanelSuperior);
        jPanelSuperior.setLayout(jPanelSuperiorLayout);
        jPanelSuperiorLayout.setHorizontalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuperiorLayout.createSequentialGroup()
                .addGap(0, 158, Short.MAX_VALUE)
                .addComponent(jLabelTitulo)
                .addGap(0, 158, Short.MAX_VALUE))
        );
        jPanelSuperiorLayout.setVerticalGroup(
            jPanelSuperiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSuperiorLayout.createSequentialGroup()
                .addGap(0, 26, Short.MAX_VALUE)
                .addComponent(jLabelTitulo)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelSuperior, java.awt.BorderLayout.PAGE_START);

        jPanelDerecho.setBackground(new java.awt.Color(0, 153, 255));
        jPanelDerecho.setLayout(new javax.swing.BoxLayout(jPanelDerecho, javax.swing.BoxLayout.Y_AXIS));

        jButtonValidar.setText("Validar tokens");
        jButtonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidarActionPerformed(evt);
            }
        });
        jPanelDerecho.add(jButtonValidar);

        jLabel1.setText(" ");
        jPanelDerecho.add(jLabel1);

        jButtonLimpiar.setText("Limpiar pantalla ");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        jPanelDerecho.add(jButtonLimpiar);

        getContentPane().add(jPanelDerecho, java.awt.BorderLayout.LINE_END);

        jPanelIzquierdo.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout jPanelIzquierdoLayout = new javax.swing.GroupLayout(jPanelIzquierdo);
        jPanelIzquierdo.setLayout(jPanelIzquierdoLayout);
        jPanelIzquierdoLayout.setHorizontalGroup(
            jPanelIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 207, Short.MAX_VALUE)
        );
        jPanelIzquierdoLayout.setVerticalGroup(
            jPanelIzquierdoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );

        getContentPane().add(jPanelIzquierdo, java.awt.BorderLayout.LINE_START);

        jPanelInferior.setBackground(new java.awt.Color(0, 153, 255));

        jButtonCargarArchivox.setText("Cargar Archivo");
        jButtonCargarArchivox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarArchivoxActionPerformed(evt);
            }
        });

        jButtonGuardarArchivo.setText("Guardar Archivo");
        jButtonGuardarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarArchivoActionPerformed(evt);
            }
        });

        jTextFieldBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInferiorLayout = new javax.swing.GroupLayout(jPanelInferior);
        jPanelInferior.setLayout(jPanelInferiorLayout);
        jPanelInferiorLayout.setHorizontalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInferiorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonCargarArchivox)
                .addGap(52, 52, 52)
                .addComponent(jButtonGuardarArchivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonBuscar)
                .addContainerGap())
        );
        jPanelInferiorLayout.setVerticalGroup(
            jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInferiorLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCargarArchivox)
                    .addComponent(jButtonGuardarArchivo)
                    .addComponent(jTextFieldBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelInferior, java.awt.BorderLayout.PAGE_END);

        jPanelCentral.setLayout(new javax.swing.BoxLayout(jPanelCentral, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane2.setViewportView(jTextPane1);

        jPanelCentral.add(jScrollPane2);

        getContentPane().add(jPanelCentral, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidarActionPerformed
        // TODO add your handling code here:
        String txt = jTextPane1.getText();
        validar.recibiriCadena(txt, this);
        this.setVisible(false);

    }//GEN-LAST:event_jButtonValidarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        // TODO add your handling code here:
        jTextPane1.setText("");

    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonCargarArchivoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarArchivoxActionPerformed
        // TODO add your handling code here:
        if (seleccionar.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("txt")) {
                    String documento = abrirArchivo(archivo);
                    jTextPane1.setText(documento);
                } else {
                    JOptionPane.showMessageDialog(null, "Error al abrir archivo");
                }
            }
        }

    }//GEN-LAST:event_jButtonCargarArchivoxActionPerformed

    private void jButtonGuardarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarArchivoActionPerformed
        // TODO add your handling code here:

        if (seleccionar.showDialog(null, "guaradar") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("txt")) {
                String documneto = jTextPane1.getText();
                String mensaje = guardarArchivo(archivo, documneto);
                if (mensaje != null) {
                    JOptionPane.showMessageDialog(null, "Archivo guardado");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al guarda archivo");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Guardar texto");
            }
        }

    }//GEN-LAST:event_jButtonGuardarArchivoActionPerformed

    private void jTextFieldBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        this.buscarPalabra=new buscarPalabra();
        buscarPalabra.buscarpalabra1(jTextPane1, jTextFieldBuscar.getText());
        
        
      //  buscarpalabra(jTextPane1, jTextFieldBuscar.getText());
    }//GEN-LAST:event_jButtonBuscarActionPerformed

//    public void buscarpalabra(JTextPane area1, String texto) {
//        if (texto.length() >= 1) {
//            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);
//            Highlighter h = area1.getHighlighter();
//            h.removeAllHighlights();
//            String text = area1.getText();
//            String caracteres = texto;
//            Pattern p = Pattern.compile("(?i)" + caracteres);
//            Matcher m = p.matcher(text);
//            while (m.find()) {
//                try {
//                    h.addHighlight(m.start(), m.end(), highlightPainter);
//                } catch (BadLocationException ex) {
//                   // Logger.getLogger(color.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        } else {
//             Highlighter h = area1.getHighlighter();
//            h.removeAllHighlights();
//         //   JOptionPane.showMessageDialog(area1, "la palabra a buscar no puede ser vacia");
//        }
//    
//    }
    
    public void buscarpalabra(JTextPane area1, String texto) {
        if (texto.length() >= 1) {
            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(Color.GREEN);
            Highlighter h = area1.getHighlighter();
            h.removeAllHighlights();
            String text = area1.getText();
            String caracteres = texto;
            Pattern p = Pattern.compile("(?i)" + caracteres);
            Matcher m = p.matcher(text);
            while (m.find()) {
                try {
                    h.addHighlight(m.start(), m.end(), highlightPainter);
                } catch (BadLocationException ex) {
                   // Logger.getLogger(color.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
             Highlighter h = area1.getHighlighter();
            h.removeAllHighlights();
         //   JOptionPane.showMessageDialog(area1, "la palabra a buscar no puede ser vacia");
        }
    
    }
    
    
    public String abrirArchivo(File archivo) {
        String documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int ascc;
            while ((ascc = entrada.read()) != -1) {
                char caracter = (char) ascc;
                documento += caracter;

            }
        } catch (Exception e) {
        }
        return documento;
    }

    public String guardarArchivo(File archivo, String documento) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt);
            mensaje = "archivo guardado";
        } catch (Exception e) {
        }
        return mensaje;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCargarArchivox;
    private javax.swing.JButton jButtonGuardarArchivo;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonValidar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelCentral;
    private javax.swing.JPanel jPanelDerecho;
    private javax.swing.JPanel jPanelInferior;
    private javax.swing.JPanel jPanelIzquierdo;
    private javax.swing.JPanel jPanelSuperior;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
